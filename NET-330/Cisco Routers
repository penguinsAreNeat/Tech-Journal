Router Command Levels (Sourced from https://www.cisco.com/E-Learning/bulk/public/tac/cim/cib/using_cisco_ios_software/02_cisco_ios_hierarchy.htm#:~:text=There%20are%20five%20command%20modes,mode%2C%20and%20line%20configuration%20mode.)
Router>	- User EXEC mode
  Router#	- Privileged EXEC mode
    Router(config)#	- Configuration mode (notice the # sign indicates this is accessible only at privileged EXEC mode)
      Router(config-if)#	- Interface level within configuration mode
      Router(config-router)#	- Routing engine level within configuration mode
      Router(config-line)#	- Line level (vty, tty, async) within configuration mode

Hierarchy commands, in order:
enable
config
exit

Useful commands:

add something for ip-helper-address

Basic commands 
  Abbreviated commands:
interface FastEthernet 0/x
  int fa 0/x

Multiple ports/VLAN
(config) interface range FastEthernet 0/x-y (let's you configure multiple ports at one time)
(config-if-range) switchport access vlan x (defines the vlan for all ports in the range)
(config) vlan [number] (Adds VLAN)
  (config-vlan) name [VLAN name] (Sets VLAN name)
(config) show vlan (Displays VLANs)
(config-if) switchport mode trunk
  (config-if) switchport trunk encapsulation dot1q #For the "Trunk encapsulation is Auto, cannot configure to trunk" error
(config-if) switchport mode access 

Setup
Router(config-if) no shutdown (turns on port)
Router(config) ip routing (turns on routing on multilayer switches)

Configuration
Router(config) interface FastEthernet0/0 (interface selection)
Router(config) interface vlan 100 (brings you into vlan interface config mode)
Router(config-if) ip address 10.25.100.1 255.255.255.0 (set the ip address and subnet FOR VLANS)

Misc:
VLAN 1 is shutdown by default
CTRL + Shift + 6 will stop cmd output
Wildcard masks are the inverse of subnet masks, i.e. 255.255.255.0 instead of 0.0.0.255

DHCP:
Enable DHCP on server and use GUI to set paramaters, including VLANs
For DHCP relay, enter "ip helper-address [DHCP server IP]" on each server

NAT:
Interface with inside port and assign it "ip nat inside"
Interface with outside port and assign it "ip nat outside"
Create translation rule "ip nat inside source static [inside IP] [outside "new" IP]"

PAT:
Define inside and outdside interfaces (see NAT)
Set pool size "ip nat pool [pool name] [range 1] [range 2] netmask [netmask range]"
Permit which IPs can use the pool "access-list [AL number] permit [IP number] [Subnet mask]
Allow [AL number] to access the pool "ip nat inside source list [AL number] pool [pool name] overload"
debug: Router# "sh ip nat"

OSPF:
Manually set peers and the process numbers, and the routers will handle the rest
(config-it) "router OSPF [proccess number]"
"network [IP network] [wildcard mask] area [area number] 
Process number is used for differentiating multiple processes on routers, default 1 will work for single instance
Area number must be consistent with the process number on each router to create handshakes, default 0 will for single instance
debug: sh ip route

BGP:
This is not something you should be touching unless you are a ISP (that's a warning of annoyance)
OSPF must be set up beforehand
Make sure to set the default route to ISP/main (ip route [destination] [subnet mask] [next hop IP address])
"default-information originate"
"redistribute OSPF [process number]
Setup: "router bgp [AS number] (AS number is unique to the router/orginization)
Set peers: "neighbor [IP address] remote-as [peer AS number]
Advertise internal networks: "network [internal IP] mask [subnet mask]"
debug: sh ip bgp

Access Lists:
Some fields can be replaced with "any"
Standard: "ip access-list standard [ACL number] (These can be applied to incoming or outgoing traffic on interfaces)
  Name: "ip access-list standard [ACL name]
  Entries: ["permit or "deny"] [source IP] [wildcard mask] (Don't forget about implicit deny, "permit any" will allow any)
  Apply to interface with: "ip access-group [ACL number] ["in" or "out"] (short for inbound and outbound)
  Deletion: no ip access-list standard [ACL number]
Extended: "ip access-list extended [ACL number]
  Fields can optionally end with "eq [port number]" to specify a port number for traffic
  Entry tcp/udp: ["permit" or "deny] ["tcp" or "udp"] [IP address 1] [IP address 2] host [IP address 3] 
  Entry ip: ["permit" or "deny"] ip [IP address 1] [IP address 2] [IP address 3] [IP address 4]
  Apply to interface with: "ip access-group [ACL number] ["in" or "out"]
debug: sh ip access-lists

IPSEC:
