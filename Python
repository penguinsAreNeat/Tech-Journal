Var Types
  int
    float
    complex
  boolean
  string - technically arrays
  list
    tuple
    range
  dict
  set
  frozenset

Operands
  and
  or
  not
  ==
  !=
  >=
  <=
  Extended:
    ^ - XOR
    abs() - absolute value
    bool - converts to boolean value
      # Negative numbers are considered True

Strings
  # Can be accessed with MIAO

  str.upper() - return string in uppercase
  str.lower() - return string in lowercase
  str.strip() - remove whitespace at ends
  str.replace("x", "y") - replace all instances of x with y
  str.split("x") - split string in all places with the same string as x, return as array

Lists - ordered and changeable list of elements
  # Can be accessed with MIAO
  li.append(x) - add element to list
  li.insert(i, x) - add element i at x
  li.extend(li2) - append li2 to li, works for tuples, dicts, and sets

Mutiple index access options (MIAO)
  str enabled
  list enabled

  x[i] - returns character at i
  x[i:j] - return characters from i to j
  x[:j] - return characters from start to j
  x[i:] - return characters from i to end
  x[-i:] - start i from end of x

  len(x) - returns length int of x
  x in txt - boolean if x exists in txt

If Statements
  if a = b: 
  elif a = b:
  else:
    pass - skip statement

For Loop
  for x in array:
  for x in str:
  for x in range(int):
  else:
  # Triggers at end of loop

Statement options
  pass - skip
  continue - skip
  break - end

Lists - Ordered and changeable set of items
  varName = [] - int
  varName = ["", ""] - str
  
  TypeError: string indices must be integers
    # For crying out loud, did you use a colon?

Methods
  def name(input1, input_etc)
    return - to return variable
    pass - skip method

Misc:
  str * int is a valid operation
